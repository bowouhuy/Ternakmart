{"version":3,"sources":["webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts"],"names":["name","provide","form","this","inheritAttrs","props","disabled","lazyValidation","readonly","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","valueComparator","type","default","mixins","active","activeClass","chipGroup","close","closeIcon","closeLabel","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","computed","classes","groupClasses","hasClose","isClickable","created","breakingProps","original","replacement","click","genFilter","children","$createElement","VIcon","left","genClose","right","size","$vuetify","lang","t","genContent","tabindex","setBackgroundColor","color","setTextColor","functional","directives","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","listeners","icon","dark","light","center","mergeData","class","f","inset","themeClasses","$listeners","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","parsedItems","map","item","tileActiveClass","staticNoDataTile","tile","role","undefined","mousedown","VListItem","genTileContent","genAction","VListItemAction","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","index","genTile","hasItem","getDisabled","id","inputValue","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","counterValue","isFocused","closeConditional","include","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","internalValue","window","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","findExistingIndex","$refs","menu","genChipSelection","isDisabled","isInteractive","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","genInput","autocomplete","placeholder","keypress","onKeyPress","genHiddenInput","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelections","genSelection","genSlotSelection","selection","selected","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","Math","onKeyDown","isReadonly","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","setSelectedItems","values","v","oldValue","appendInner"],"mappings":"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","file":"js/chunk-39b04389.d60724ce.js","sourcesContent":["import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n"],"sourceRoot":""}